<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[falconzy's Blog]]></title>
  <link href="http://falconzy.github.io/atom.xml" rel="self"/>
  <link href="http://falconzy.github.io/"/>
  <updated>2014-05-03T15:59:16+08:00</updated>
  <id>http://falconzy.github.io/</id>
  <author>
    <name><![CDATA[Ian Zhao]]></name>
    <email><![CDATA[ian@zhaoyan.me]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[angularJS Learning Resource]]></title>
    <link href="http://falconzy.github.io/blog/2014/05/03/angularjs-learning-resource/"/>
    <updated>2014-05-03T15:16:34+08:00</updated>
    <id>http://falconzy.github.io/blog/2014/05/03/angularjs-learning-resource</id>
    <content type="html"><![CDATA[<h3>Angular setep by step learning website</h3>

<ul>
<li><a href="http://angular-tips.com/blog/2013/08/why-does-angular-dot-js-rock/">Why Does Angular.js Rock?</a></li>
<li><a href="http://lostechies.com/gabrielschenker/2013/12/05/angularjspart-1[/">AngularJS–Part 1 to Part 15 &ndash; LosTechnies</a></li>
<li><a href="https://egghead.io/lessons">AngularJS Training Videos and Tutorials for Developers</a></li>
<li><a href="http://www.thinkster.io/angularjs/GtaQ0oMGIl">A Better Way to Learn AngularJS</a></li>
</ul>


<h3>recommend Blogs</h3>

<ul>
<li><a href="http://viralpatel.net/blogs/angularjs-routing-and-views-tutorial-with-example/">AngularJS Routing And Views Tutorial With Example</a></li>
<li><a href="http://viralpatel.net/blogs/angularjs-service-factory-tutorial/">AngularJS Service / Factory Tutorial With Example</a></li>
<li><a href="http://viralpatel.net/blogs/angularjs-routing-and-views-tutorial-with-example/">AngularJS Routing And Views Tutorial With Example</a></li>
<li><a href="http://scotch.io/tutorials/javascript/angular-routing-using-ui-router">AngularJS Routing Using UI-Router</a></li>
<li><a href="http://scotch.io/tutorials/javascript/angularjs-form-validation">AngularJS Form Validation</a></li>
<li><a href="http://scotch.io/tutorials/javascript/submitting-ajax-forms-the-angularjs-way">Submitting AJAX Forms: The AngularJS Way</a></li>
<li><a href="http://scotch.io/tutorials/javascript/single-page-apps-with-angularjs-routing-and--%20templating">Single Page Apps with AngularJS Routing and Templating</a></li>
<li><a href="http://scotch.io/tutorials/javascript/creating-a-single-page-todo-app-with-node-and-angular">Creating a Single Page Todo App with Node and Angular</a></li>
<li><a href="http://scotch.io/tutorials/javascript/handling-checkboxes-and-radio-buttons-in-angular-forms">Handling Checkboxes and Radio Buttons in Angular Forms</a></li>
<li><a href="http://www.masnun.com/2013/08/28/rest-access-in-angularjs-using-ngresource.html">REST ACCESS IN ANGULARJS USING NGRESOURCE</a></li>
<li><a href="https://docs.google.com/document/d/1XXMvReO8-Awi1EZXAXS4PzDzdNvV6pGcuaF4Q9821Es/pub">Best Practice Recommendations for Angular App Structure</a></li>
<li><a href="http://www.yearofmoo.com/2013/01/full-spectrum-testing-with-angularjs-and-karma.html#karma">Full-Spectrum Testing with AngularJS and Karma</a></li>
<li><a href="http://www.sitepoint.com/unit-and-e2e-testing-in-angularjs/">Unit and End to End Testing in AngularJS</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Projects]]></title>
    <link href="http://falconzy.github.io/blog/2014/01/25/github-projects/"/>
    <updated>2014-01-25T12:54:32+08:00</updated>
    <id>http://falconzy.github.io/blog/2014/01/25/github-projects</id>
    <content type="html"><![CDATA[<h3>Jquery</h3>

<ul>
<li><a href="https://github.com/posabsolute/jQuery-Validation-Engine">jQuery form validation plugin</a> -Javascript plugin aimed at the validation of form fields in the browser</li>
</ul>


<h3>Javascript Library</h3>

<ul>
<li><a href="https://github.com/pazguille/voix">Voix JS</a> &ndash; A JavaScript library to add voice commands to your sites, apps or games.</li>
<li><a href="https://github.com/HubSpot/pace">pace</a> &ndash; An automatic web page progress bar.(<a href="http://github.hubspot.com/pace/docs/welcome/">http://github.hubspot.com/pace/docs/welcome/</a>)</li>
</ul>


<h3>Node modules</h3>

<ul>
<li><a href="https://github.com/Obvious/ursa">ursa</a> &ndash; provides a fairly complete set of wrappers for the RSA public/private key crypto functionality of OpenSSL.</li>
<li><a href="https://github.com/broofa/node-uuid">node-uuid</a> &ndash; Generate RFC-compliant UUIDs in JavaScript</li>
<li><a href="https://github.com/ammmir/node-oauth2-provider">node-oauth2-provider</a> &ndash; A simple customizable OAuth 2.0 provider (server) for node.js.</li>
<li><a href="https://github.com/bxshi/wechat-chrome-plugin">wechat-chrome-plugin</a> &ndash; A WeChat(微信) plugin for chrome, add notification and some other stuff</li>
<li><a href="https://github.com/koajs/koa">koa</a> &ndash; Koa is a new web framework designed by the team behind Express</li>
<li><a href="https://github.com/visionmedia/node-pwd">node-pwd</a> -Hash and compare passwords with the crypto&rsquo;s pbkdf2.</li>
<li><a href="https://github.com/visionmedia/ejs">ejs</a> &ndash; Embedded JavaScript templates for node</li>
<li><a href="https://github.com/rogerwang/node-webkit">node-webkit</a> &ndash; app runtime based on Chromium and node.js. You can write native apps in HTML and Javascript with node-webkit.</li>
</ul>


<h3>Project boilerplate</h3>

<ul>
<li><a href="https://github.com/madhums/node-express-mongoose">node-express-mongoose</a> &ndash; A boilerplate application for building web apps using express, mongoose and passport.</li>
<li><a href="https://github.com/bcoe/node-mocha-skeleton">node-mocha-skeleton</a> &ndash; A skeleton Node.JS project with Mocha for testing</li>
<li><a href="https://github.com/omri-shaiko/Mean-EJS">Mean-EJS</a> &ndash; Same as Mean.io But with EJS</li>
<li><a href="https://github.com/gustavo-armenta/CookieAuthenticationSample">CookieAuthenticationSample</a> &ndash; Protected SignalR endpoint webhosted or selfhosted can be accessed by authenticated C# and/or JS client</li>
</ul>


<h3>Sample Project###</h3>

<p><a href="https://github.com/scotch-io/node-todo">node-todo</a> &ndash; A simple Node/MongoDB/Angular todo app
<a href="https://github.com/mattgaidica/twitter-mongo">twitter-mongo</a> &ndash; Simple User Authentication with Node.js, Express, Mongoose, and Passport</p>

<h3>Programming guide</h3>

<p><a href="https://github.com/mgechev/angularjs-style-guide">angularjs-style-guide</a> &ndash; Community-driven set of best practices for AngularJS
<a href="https://github.com/csswizardry/CSS-Guidelines">CSS-Guidelines</a> &ndash; High-level guidelines from writing manageable, maintainable CSS</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome Extension]]></title>
    <link href="http://falconzy.github.io/blog/2014/01/25/chrome-extension/"/>
    <updated>2014-01-25T12:51:45+08:00</updated>
    <id>http://falconzy.github.io/blog/2014/01/25/chrome-extension</id>
    <content type="html"><![CDATA[<h3>Building Your First Chrome Extension</h3>

<ul>
<li><a href="http://net.tutsplus.com/tutorials/javascript-ajax/developing-google-chrome-extensions/">Developing Google Chrome Extensions</a></li>
<li><a href="http://css-tricks.com/colorpeek-simple-way-see-share-css-colors/">Colorpeek: A Simple Way to See and Share CSS Colors</a></li>
<li><a href="http://css-tricks.com/colorpeek-part-2-building-first-chrome-extension/">Colorpeek, Part 2: Building Your First Chrome Extension</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASP.NET MVC]]></title>
    <link href="http://falconzy.github.io/blog/2014/01/25/asp-dot-net-mvc/"/>
    <updated>2014-01-25T12:17:28+08:00</updated>
    <id>http://falconzy.github.io/blog/2014/01/25/asp-dot-net-mvc</id>
    <content type="html"><![CDATA[<h3>ASP.NET MVC</h3>

<ul>
<li><a href="http://www.asp.net/mvc/tutorials/mvc-5/introduction/getting-started">Getting Started with ASP.NET MVC 5</a></li>
<li><a href="http://www.asp.net/mvc/tutorials/mvc-5/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on">Create an ASP.NET MVC 5 App with Facebook and Google OAuth2 and OpenID Sign-on</a></li>
<li><a href="http://mazharkaunain.blogspot.sg/2012/03/aspnet-mvc-using-automapper.html?m=1">Asp.net mvc using AutoMapper simplified</a></li>
<li><a href="http://www.codeproject.com/Articles/674760/Code-First-Migration-and-Extending-Identity-Accoun">Code-First Migration and Extending Identity Accounts in ASP.NET MVC 5 and Visual Studio 2013</a></li>
<li><a href="http://www.microsoftvirtualacademy.com/training-courses/developing-asp-net-mvc-4-web-applications-jump-start#?fbid=HMGAeyEDJmJ">Developing ASP.NET MVC 4.5 Web Applications Jump Start</a></li>
<li><a href="http://blogs.msdn.com/b/webdev/archive/2013/10/17/attribute-routing-in-asp-net-mvc-5.aspx">Attribute Routing in ASP.NET MVC 5</a></li>
<li><a href="http://www.codeproject.com/Articles/525532/Design-and-Develop-a-website-using-ASP-NET-MVC-4-E">Design and Develop a website using ASP.NET MVC 4, EF, Knockoutjs and Bootstrap</a></li>
<li><a href="http://www.dotnet-tricks.com/Tutorial/mvc/9KHW190712-ViewData-vs-ViewBag-vs-TempData-objects-in-mvc3-razor.html">ViewData vs ViewBag vs TempData objects in mvc3 razor</a></li>
<li><a href="http://www.dotnetcurry.com/showarticle.aspx?ID=814">Understanding Routing in ASP.NET MVC</a></li>
<li><a href="http://weblogs.asp.net/jgalloway/archive/2012/08/29/simplemembership-membership-providers-universal-providers-and-the-new-asp-net-4-5-web-forms-and-asp-net-mvc-4-templates.aspx">SimpleMembership, Membership Providers, Universal Providers and the new ASP.NET 4.5 Web Forms and ASP.NET MVC 4 templates</a></li>
<li><a href="http://www.mikesdotnetting.com/Article/188/View-Model-Design-And-Use-In-Razor-Views">View Model Design And Use In Razor Views</a></li>
<li><a href="http://blogs.msdn.com/b/aspnetue/archive/2010/09/17/second_2d00_post.aspx">Best Practices for ASP.NET MVC</a></li>
<li><a href="http://blog.osbornm.com/2010/07/21/using-simplemembership-with-asp-net-webpages/">Using SimpleMembership With ASP.NET WebPages</a></li>
<li><a href="http://weblogs.asp.net/scottgu/archive/2010/01/15/asp-net-mvc-2-model-validation.aspx">ASP.NET MVC 2: Model Validation</a></li>
<li><a href="http://www.hanselman.com/blog/OneASPNETMakingJSONWebAPIsWithASPNETMVC4BetaAndASPNETWebAPI.aspx">Making JSON Web APIs with ASP.NET MVC 4 Beta and ASP.NET Web API</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Grunt Project]]></title>
    <link href="http://falconzy.github.io/blog/2014/01/09/setup-grunt-project/"/>
    <updated>2014-01-09T20:46:10+08:00</updated>
    <id>http://falconzy.github.io/blog/2014/01/09/setup-grunt-project</id>
    <content type="html"><![CDATA[<h3>Reference</h3>

<ul>
<li><a href="http://jonathanmh.com/make-grunt-watch-for-lesscss-changes/">Make Grunt watch for LESS-CSS changes</a></li>
<li><a href="http://merrickchristensen.com/articles/gruntjs-workflow.html">Grunt.js Workflow</a></li>
<li><a href="http://gruntjs.com/getting-started">Grunt Getting Start</a></li>
</ul>


<h3>Installation</h3>

<p>Lets install the Grunt CLI globally so we can access the &ldquo;grunt&rdquo; command.</p>

<pre><code>npm install grunt-cli -g
</code></pre>

<p>check and make sure Grunt is installed correctly</p>

<pre><code>grunt --version
</code></pre>

<p><strong>Note</strong> that installing grunt-cli does not install the Grunt task runner! The job of the Grunt CLI is simple: run the version of Grunt which has been installed next to a Gruntfile. This allows multiple versions of Grunt to be installed on the same machine simultaneously.</p>

<h3>Project Integration</h3>

<p>Integrate Grunt with our project.
package.json</p>

<pre><code>{
    "name": "my-project-name",
    "version": "0.1.0",
    "devDependencies": {
      "grunt": "~0.4.2",
      "grunt-contrib-jshint": "~0.6.3",
      "grunt-contrib-nodeunit": "~0.2.0",
      "grunt-contrib-uglify": "~0.2.2"
    }
}
</code></pre>

<p>A Gruntfile is a JavaScript file that Grunt leverages to understand your projects tasks and configuration. When you run &ldquo;grunt&rdquo; from the command line, Grunt will recurse upwards till it finds your Gruntfile. This functionality allows you to run Grunt from any sub directory of your project.</p>

<h3>Gruntfile.js</h3>

<p>A Gruntfile is comprised of the following parts:</p>

<ul>
<li>The &ldquo;wrapper&rdquo; function</li>
<li>Project and task configuration</li>
<li>Loading Grunt plugins and tasks</li>
<li>Custom tasks</li>
</ul>


<p>This is the basis of a Grunt file, it&rsquo;s a wrapper function that takes in &ldquo;grunt&rdquo; as an argument. This allows us to register tasks and configuration with grunt (and leverage Grunt&rsquo;s APIs) before Grunt actually runs any tasks</p>

<pre><code>module.exports = function(grunt) {
     // set up grunt
};
</code></pre>

<h3>Automate The Grunt Work</h3>

<p><strong>JSHint</strong></p>

<pre><code>npm install grunt-contrib-jshint --save-dev 
module.exports = function(grunt) {
      grunt.initConfig({
        jshint: {
          src: ['Gruntfile.js', 'src/app/**/*.js', 'src/config.js', 'tests/app/**/*.js'],
          options: {
            curly: true,
            eqeqeq: true,
            immed: true,
            latedef: true,
            newcap: true,
            noarg: true,
            sub: true,
            undef: true,
            boss: true,
            eqnull: true,
            browser: true,
            globals: {
              require: true,
              define: true,
              requirejs: true,
              describe: true,
              expect: true,
              it: true
            }
          }
        }
      });

      // Load JSHint task
      grunt.loadNpmTasks('grunt-contrib-jshint');

      // Default task.
      grunt.registerTask('default', 'jshint');
};
</code></pre>

<h3>run grunt</h3>

<pre><code>$ grunt

Running "jshint:src" (jshint) task
Lint free.

Done, without errors.
</code></pre>

<p>OR :</p>

<pre><code>$ grunt jshint 

Running "jshint:src" (jshint) task
Lint free.

Done, without errors.
</code></pre>

<h3>grunt &ldquo;watch&rdquo; task</h3>

<pre><code>npm install grunt-contrib-watch --save-dev

grunt.initConfig({
    watch: {
        files: '&lt;%= jshint.src %&gt;',
        tasks: ['jshint']
    },  
});

grunt.loadNpmTasks('grunt-contrib-watch');
</code></pre>

<p>This tells the grunt &ldquo;watch&rdquo; task (a built in task), to run the &ldquo;lint&rdquo; task every time one of the configuration specified lint files changes</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test-Driven Development in Node.js With Mocha]]></title>
    <link href="http://falconzy.github.io/blog/2014/01/09/tdd/"/>
    <updated>2014-01-09T20:27:20+08:00</updated>
    <id>http://falconzy.github.io/blog/2014/01/09/tdd</id>
    <content type="html"><![CDATA[<h3>Reference</h3>

<ul>
<li><a href="http://webapplog.com/test-driven-development-in-node-js-with-mocha/">Test-Driven Development in Node.js With Mocha</a></li>
<li><a href="http://www.codemag.com/Article/1308061">Asynchronous, Test-Driven Development, with JavaScript and Mocha</a></li>
<li><a href="http://phawk.co.uk/blog/testing-node-apps-with-mocha">Testing node.js apps with mocha</a></li>
<li><a href="http://visionmedia.github.io/mocha/#getting-started">Mocha Offical Page</a></li>
<li><a href="http://redotheweb.com/2013/01/15/functional-testing-for-nodejs-using-mocha-and-zombie-js.html">Functional Testing For Node.js Using Mocha and Zombie.js</a></li>
<li><a href="http://visionmedia.github.io/superagent/">SuperAgent</a></li>
<li><a href="http://net.tutsplus.com/tutorials/javascript-ajax/testing-in-node-js/">Testing in Node.js</a></li>
<li><a href="http://chaijs.com/">Chai Assertion Library</a></li>
</ul>


<h3>package.json devDependancies</h3>

<pre><code>devDependencies: {
  "chai": "*",
  "mocha": "*" // our preference, but you can use any test runner you like
}
</code></pre>

<h3>Mocha structure</h3>

<ul>
<li><strong>describe()</strong> is used to group together similar tests in Mocha</li>
<li><strong>It()</strong> describes a specific use-case for the method being tested.</li>
<li><strong>done()</strong> callback &ndash; Testing asynchronous code</li>
<li><strong>before()</strong>, <strong>after()</strong>, <strong>beforeEach()</strong>, <strong>afterEach()</strong> &ndash; hooks to setup the test case</li>
<li><strong>Pending tests</strong> &ndash;  without a callback</li>
</ul>


<h3>chai BDD styles</h3>

<p><a href="http://chaijs.com/api/bdd/">API Reference</a></p>

<pre><code>var expect = chai.expect;
expect(foo).to.be.a('string');
expect(foo).to.equal('bar');
expect(foo).to.have.length(3);
expect(tea).to.have.property('flavors')
    .with.length(3);
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Text 3 - Tips]]></title>
    <link href="http://falconzy.github.io/blog/2014/01/06/sublime-text-3-tips/"/>
    <updated>2014-01-06T00:44:49+08:00</updated>
    <id>http://falconzy.github.io/blog/2014/01/06/sublime-text-3-tips</id>
    <content type="html"><![CDATA[<h3>Sublime Text 3 Reference</h3>

<ul>
<li><a href="http://docs.sublimetext.info/en/sublime-text-3/">Sublime Text Unofficial Documentation</a></li>
<li><a href="http://scotch.io/bar-talk/sublime-text-keyboard-shortcuts">Sublime Text Keyboard Shortcuts</a></li>
<li><a href="http://docs.sublimetext.info/en/latest/reference/keyboard_shortcuts_osx.html">Keyboard Shortcuts</a></li>
<li><a href="http://scotch.io/bar-talk/best-of-sublime-text-3-features-plugins-and-settings">Best of Sublime Text 3: Features, Plugins, and Settings</a></li>
<li><a href="http://www.hongkiat.com/blog/sublime-code-snippets/">Working With Code Snippets In Sublime Text</a></li>
<li><a href="http://net.tutsplus.com/tutorials/tools-and-tips/sublime-text-2-tips-and-tricks/">Sublime Text 2 Tips and Tricks</a></li>
<li><a href="http://net.tutsplus.com/tutorials/tools-and-tips/sublime-text-2-project-bliss/">Sublime Text 2 Project Bliss</a></li>
</ul>


<h3>Add Shortcut to Mac</h3>

<pre><code>cd /
ln -s "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" /bin/subl
subl [fileName] (for edit in sublime text)
</code></pre>

<h2>Distraction Free Mode</h2>

<p>Active by:</p>

<pre><code>Control + Shift + Command + F
</code></pre>

<p>My Setting:</p>

<pre><code>{
   "line_numbers": false,      
   "gutter": false,            
   "draw_centered": true,      
   "wrap_width": 80,           
   "word_wrap": true,          
   "scroll_past_end": true     
}   
</code></pre>

<h3>Useful Keyboard Shortcuts &mdash;OSX</h3>

<pre><code>Shift + Command + P         //Access the Command Palette
Command + P                 //Fast File Switching
Command + R                 //Goto Symbols
Shift + Comand + T          //Open Rencent Closed File
Command + [ or ]            //indent
Ctrl + m                    //Jump between the {}
ctrl + shift + M            //Select of all section between {}
Command + /                 //Comment
Command + Option + /        //Comment block 
Command + L                 //Line selection
Option + Arrow_key          //word by word
Shift + Command + f         //Search for whole project
Commond + Option + f        //replace
Option + Command + [1,2,..] //layout window
</code></pre>

<h3>Enable multi-selection, you have several options:</h3>

<ul>
<li>Press <strong>Alt</strong> or <strong>Command</strong> and then click in each region where you require a cursor.</li>
<li>Shift + Control + (Arrow_Key)</li>
<li>Command + d: Select the current word and the next same word</li>
<li>Select a block of lines, and then press <code>Shift + Command + L</code></li>
<li>Add an additional cursor at all occurrences of a word by typing <strong>Ctrl+Command+G</strong></li>
</ul>


<h2>Suggest Package</h2>

<ul>
<li>Alignment</li>
<li>Emmet</li>
<li>Colorpicker</li>
<li>SublimeCodeIntel</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started Mongoose]]></title>
    <link href="http://falconzy.github.io/blog/2013/12/31/mongoose/"/>
    <updated>2013-12-31T23:50:48+08:00</updated>
    <id>http://falconzy.github.io/blog/2013/12/31/mongoose</id>
    <content type="html"><![CDATA[<h3>installation</h3>

<pre><code>$ npm install mongoose
</code></pre>

<h3>Connection</h3>

<pre><code>var mongoose = require('mongoose');
mongoose.connect('mongodb://localhost/tasks');
var db = mongoose.connection;

db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function callback () {
// conding here;
//Once connection opens,callback will be called here.
});
</code></pre>

<h3>Disconnect</h3>

<pre><code>mongoose.disconnect();
</code></pre>

<h3>REGISTERING A SCHEMA</h3>

<p>With Mongoose, everything is derived from a <em>Schema</em>.</p>

<pre><code>var Schema = mongoose.Schema;
var Tasks = new Schema({
        project: String,
        description: String
});
</code></pre>

<p>Next step is compiling our schema into a <em>Model</em>.</p>

<pre><code>mongoose.model('Task', Tasks);
</code></pre>

<h3>ADDING A TASK</h3>

<pre><code>var Task = mongoose.model('Task');
var task = new Task();
task.project = 'Bikeshed';
task.description = 'Paint the bikeshed red.';
task.save(function(err) {
    if (err) throw err;
    console.log('Task saved.');
});
</code></pre>

<h3>SEARCHING FOR A DOCUMENT</h3>

<pre><code>var Task = mongoose.model('Task');
Task.find({'project': 'Bikeshed'}).each(function(err, task) {
    if (task != null) {
        console.log('ID:' + task._id);
        console.log(task.description);
        } 
});
</code></pre>

<h3>UPDATING A DOCUMENT</h3>

<pre><code>var Task = mongoose.model('Task');
Task.update(
    {_id: '4e65b793d0cf5ca508000001'}, \\Update using internal ID
    {description: 'Paint the bikeshed green.'},
    {multi: false}, \\Only update one document
    function(err, rows_updated) {
        if (err) throw err;
        console.log('Updated.');
    }
);
</code></pre>

<h3>REMOVING A DOCUMENT</h3>

<pre><code>var Task = mongoose.model('Task');
    Task.findById('4e65b3dce1592f7d08000001', function(err, task) {
    task.remove();
});
</code></pre>

<h3>Extra</h3>

<p>add <em>methods</em> to our documents:</br>
<strong>methods must be added to the schema before compiling it with mongoose.model()</strong></p>

<pre><code>Tasks.methods.list = function () {
var greeting = this.name
    ? "Meow name is " + this.name
    : "I don't have a name"
    console.log(greeting);
}
var Kitten = mongoose.model('Kitten', kittySchema)
</code></pre>

<p><em>Functions</em> added to the <em>methods</em> property of a schema get compiled into the Model prototype and exposed on each document instance:</p>

<pre><code>var fluffy = new Kitten({ name: 'fluffy' });
fluffy.speak() // "Meow name is fluffy"
</code></pre>

<p>Each document can be saved to the database by calling its <em>save</em> method. The first argument to the callback will be an error if any occured.</p>

<pre><code>fluffy.save(function (err, fluffy) {
    if (err) // TODO handle the error
    fluffy.speak();
});
</code></pre>

<p>We can access all of the documents through model.</p>

<pre><code>Kitten.find(function (err, kittens) {
    if (err) // TODO handle err
    console.log(kittens)
})
</code></pre>

<p>filter by name, Mongoose supports MongoDBs rich <em>querying syntax</em>.</p>

<pre><code>Kitten.find({ name: /^Fluff/ }, callback)
</code></pre>

<p>This performs a search for all documents with a name property that begins with &ldquo;Fluff&rdquo; and returns the results to the callback.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OAuth 2.0]]></title>
    <link href="http://falconzy.github.io/blog/2013/12/28/oauth-2-dot-0/"/>
    <updated>2013-12-28T16:16:51+08:00</updated>
    <id>http://falconzy.github.io/blog/2013/12/28/oauth-2-dot-0</id>
    <content type="html"><![CDATA[<p>Summaries on :
OAuth 2.0 – The Good, The Bad &amp; The Ugly
<a href="http://net.tutsplus.com/tutorials/oauth-2-0-the-good-the-bad-the-ugly/">http://net.tutsplus.com/tutorials/oauth-2-0-the-good-the-bad-the-ugly/</a></p>

<h2>What is OAuth?</h2>

<p>OAuth is an open standard for authorization. OAuth provides a method for clients to access server resources on behalf of a resource owner (such as a different client or an end-user). It also provides a process for end-users to authorize third-party access to their server resources without sharing their credentials (typically, a username and password pair), using user-agent redirections.</p>

<p>OAuth is a service that is complementary to, and therefore distinct from, OpenID. OAuth is also distinct from OATH, which is a reference architecture for authentication (i.e. not a standard).</p>

<h2>Key Words of OAuth</h2>

<ul>
<li><strong>Resource Owner</strong> : An entity capable of granting access to a protected resource. Most of the time, it’s an end-user.</li>
<li><strong>Client</strong> : An application making protected resource requests on behalf of the resource owner and with its authorization. It can be a server-based, mobile (native) or a desktop application.</li>
<li><strong>Resource Server</strong> : The server hosting the protected resources, capable of accepting and responding to protected resource requests.</li>
<li><strong>Authorization Server</strong> : The server issuing access grants/tokens to the client after successfully authenticating the resource owner and obtaining authorization.</li>
<li><strong>Access Token</strong> : Access tokens are credentials presented by the client to the resource server to access protected resources. It’s normally a string consisting of a specific scope, lifetime and other access attributes and it may self contain the authorization information in a verifiable manner.</li>
<li><strong>Refresh Token</strong> : Although not mandated by the spec, access tokens ideally have an expiration time which can last anywhere from a few minutes to several hours. Once an access token is expired, the client can request the authorization server to issue a new access token using the refresh token issued by the authorization server.</li>
</ul>


<h2>OAuth 2.0 in Depth</h2>

<p>Before initiating the protocol, the client must <em>register with the authorization server</em> by providing its client type, its redirection URL (where it wants the authorization server to redirect to after the resource owner grants or rejects the access) and any other information required by the server and in turn, is given a client identifier and client secret (client_secret). This process is known as <strong>Client Registration</strong>.</p>

<h2>The Web Server Flow</h2>

<p>Since this is a redirection-based flow, the client must be able to interact with the resource owner’s user agent (which in most cases is a web browser) and hence is typically suited for a web application. The below diagram is a bird’s eye view of how the end-user (or the resource owner) uses the client application (web-server based application in this case) to authenticate and authorize with the authorization server, in order to access the resources protected by the resource server.</p>

<p><img class="center" src="http://falconzy.github.io/images/web_server_flow.jpg" width="600" height="450" title="Web Server Flow" ></p>

<h2>Authenticate &amp; Authorize the Client</h2>

<p><a href="https://developers.google.com/oauthplayground/">https://developers.google.com/oauthplayground/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup a Octopress Blog With Github]]></title>
    <link href="http://falconzy.github.io/blog/2013/12/26/hello-octopress/"/>
    <updated>2013-12-26T20:42:38+08:00</updated>
    <id>http://falconzy.github.io/blog/2013/12/26/hello-octopress</id>
    <content type="html"><![CDATA[<h2>Follow the Gudie: </h2>

<ul>
<li><a href="http://octopress.org/docs/setup/">Octopress Setup</a></li>
<li><a href="http://octopress.org/docs/configuring/">Configuration</a></li>
<li><a href="http://octopress.org/docs/blogging/">Blog Posts</a></li>
<li><a href="http://octopress.org/docs/deploying/github/">Deploying to Github Pages</a></li>
<li><a href="http://daringfireball.net/projects/markdown/basics">Markdown: Basics</a></li>
</ul>


<h2>Troubleshooting</h2>

<hr />

<p>Here are some problem i face during the <em>installation and setup</em> process,hope it helps you:</br></p>

<h2>Error 1</h2>

<blockquote><p>You have already activated rake 10.1.1, but your Gemfile requires rake 0.9.2.2. Using bundle exec may solve this.</p>

<h2>solution :</h2>

<p>modify the &ldquo;Gemfile&rdquo;, changed to
<code>gem &lsquo;rake&rsquo;, &lsquo;~> 10.1.1&rsquo;</code></p></blockquote>

<h2>Error 2</h2>

<blockquote><p>Fail to deply when run &ldquo;rake deploy&rdquo;</p>

<h2>solution :</h2>

<p><code>
when Octopress runs commond rake depoly, it will push two brance to Github, one call &ldquo;source&rdquo;, it&rsquo;s all your octopress code, another call &ldquo;master&rdquo;, it&rsquo;s the gernerated html file to display your website. need to make sure all your brance up to date before you run &ldquo;rake deploy&rdquo;.
</code></p></blockquote>

<h2>Extra Reading</h2>

<ul>
<li><a href="http://webdesign.tutsplus.com/tutorials/applications/getting-started-with-octopress/">Getting Started with Octopress</a></li>
<li><a href="https://help.github.com/articles/github-flavored-markdown">GitHub Flavored Markdown</a></li>
<li><a href="http://daringfireball.net/projects/markdown/syntax">MarkDown Syntax</a></li>
<li><a href="http://www.moncefbelyamani.com/how-to-install-and-configure-octopress-on-a-mac/">How to Install &amp; Configure Octopress on a Mac, and Host Your Static Website on Amazon S3</a></li>
<li><a href="http://www.darkcoding.net/software/markdown-quick-reference/">Markdown quick reference</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
